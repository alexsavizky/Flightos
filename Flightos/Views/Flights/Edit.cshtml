@model Flightos.Models.Flights
@{
    if (Session["admin"] != null)
    {
        Layout = "~/Views/Shared/AdminLayout.cshtml";
    }
    else if (Session["username"] != null)
    {
        Layout = "~/Views/Shared/UserLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/DefaultLayout.cshtml";
    }
}
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Flights</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.flightnum)

        <div class="form-group">
            @Html.LabelFor(model => model.flightcompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.flightcompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.flightcompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.seats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.seats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.seats, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.from, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.from, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.from, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.to, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.to, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.to, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.depdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="text-danger field-validation-valid" data-valmsg-for="EventDate" data-valmsg-replace="true"></span>
            <input type="datetime" id="@Html.IdFor(m => m.depdate)" name="@Html.NameFor(m => m.depdate)" value="@Model.depdate.ToString("yyyy-MM-ddTHH:mm:ss")" class="form-control" data-val="true" data-val-required="The EventDate field is required.">
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.arrivedate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="text-danger field-validation-valid" data-valmsg-for="EventDate" data-valmsg-replace="true"></span>
            <input type="datetime" id="@Html.IdFor(m => m.arrivedate)" name="@Html.NameFor(m => m.arrivedate)" value="@Model.arrivedate.ToString("yyyy-MM-ddTHH:mm:ss")" class="form-control" data-val="true" data-val-required="The EventDate field is required.">
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
